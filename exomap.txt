Отображение записей FRD на (расширенную) модель EXODUS II
+ 1С/model_name -> мусор
+ 1U/user -> info_records; обработать далее???
+ 2C/nodes -> узлы (...)
+ 3C/elts -> элементы и блоки (...); .material -> ID, .group -> мусор
NB: серьезная проблема -- куда девать блочные метаданные
1) они зависят от номера шага по времени И от номера блока
2) предположим, что число блоков на каждом шаге постоянное -- этого можно ожидать, если выдаваемые наборы переменных на каждом шаге одинаковы
3) тогда можно ввести дополнительную размерность по блокам, может быть, она понадобится где-то еще
4) тогда вводим доп. 3-мерную переменную типа char
1P/*step.*block.P* ??? -> блочные метаданные (?????) (нужна доп. переменная и измерение? в EXODUS II)
100C/*step.*block:
NB: 1) все нижеуказанные поля формально относятся к блоку FRD, однако опыт <проверить> говорит, что на самом деле они зависят только от шага по времени => можно брать для первого блока
2) осмысленные значения -- тип анализа (число и текст), не уверен, что имеет смысл конвертировать в один EXODUS-II файл выдачу, в которой соединены разные типы анализа => может быть, сделать это глобальным атрибутом, или же атрибутом time_whole (чтобы понимать, чему соответствует эта переменная)
  100C:TEXT/text -> мусор
  100C:VALUE/val -> time_whole - главная темпоральная переменная EXODUS II
  100C:ICTYPE/type  -> доп. темпоральная переменная ??? 
  100C:ANALYS/analysis -> доп. темпоральная переменная ???
  100C:SETNAME/setname  -> мусор
  100C:NUMSTP/nstep -> проверить и игнорировать, она совпадает с ключом
100C:-4,-5 -- переменные, заданные в разных блоках, агрегируются. Формируется составное имя (_). 
NB: выдача тензорных компонент должна идти в порядке EXODUS II/VTK.  Как это обеспечить?
Наиболее корректный способ (который работает и для векторов) -- составить ключи из полей type, ind1, ind2(?) и ключу в соответствие поставить порядок компоненты
Вопрос -- что делать с типами 12 и 14 (амплитуды и фазы векторов и тензоров)? по имени MAG и PHA
результат -- классификация переменных и далее по ситуации

Устройство записей 1P:
*1 I4 A1 A18 хвост
! STEP -> I12 I12 I12
GM -> E12 [1.0]
GK -> E12
! HID -> I12
AX -> E12 E12 E12 E12 E12 E12
SUBC -> I12 [0]
! MODE -> I12

